# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
import math

Phi = 1.6180339
phi = -0.6180339
limit = 4000000
result = []
garbage = []

def binet(n):
	return math.ceil((math.pow(Phi,n)/math.sqrt(5)) - (math.pow(phi,n)/math.sqrt(5)))

for i in range(1,40):
	fib = binet(i)
	if (fib%2==0 and fib <= limit):
		result.append(fib)
	else:
		garbage.append(fib)

print result, "\n", garbage, "\n", math.fsum(result)